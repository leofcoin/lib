[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/block.js",
    "content": "import Transaction from './transaction'\r\nimport ipldLfc from 'ipld-lfc';\r\n\r\nconst { LFCNode } = ipldLfc\r\n\r\n\r\n/**\r\n * @extends {Transaction}\r\n * @example\r\n * const block = new Block()\r\n */\r\nexport default class Block extends Transaction {\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  \r\n  goodBlock(block, difficulty){\r\n    return new Promise(async (resolve, reject) => {\r\n      block.hash = await this.blockHash(block);\r\n      if (parseInt(block.hash.substring(0, 8), 16) >= difficulty) {\r\n        block.nonce++\r\n        block = await this.goodBlock(block, difficulty)\r\n      }      \r\n      resolve(block)\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * Create a new genesis block\r\n   */\r\n  async newGenesisDAGNode(difficulty = 1, address = Buffer.alloc(32).toString('hex')) {\r\n    let block = {\r\n      index: 0,\r\n      prevHash: Buffer.alloc(47).toString('hex'),\r\n      time: Math.floor(new Date().getTime() / 1000),\r\n      transactions: [\r\n        // ms.unspent(network, [], wallet.account()).create(index: 0, amount: consensusSubsidy(0), address)\r\n      ],\r\n      nonce: 0\r\n    }\r\n    block.hash = await blockHash(block);\r\n    block = await this.goodBlock(block, difficulty)\r\n    console.log({block});\r\n    const node = new LFCNode(block)\r\n    return node;\r\n  }\r\n}",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/block.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "LFCNode",
    "memberof": "src/block.js",
    "static": true,
    "longname": "src/block.js~LFCNode",
    "access": "public",
    "export": false,
    "importPath": "@leofcoin/lib/src/block.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Block",
    "memberof": "src/block.js",
    "static": true,
    "longname": "src/block.js~Block",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/block.js",
    "importStyle": "Block",
    "description": "",
    "examples": [
      "const block = new Block()"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "Transaction"
    ]
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/block.js~Block",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/block.js~Block#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "goodBlock",
    "memberof": "src/block.js~Block",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/block.js~Block#goodBlock",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "block",
        "types": [
          "*"
        ]
      },
      {
        "name": "difficulty",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "newGenesisDAGNode",
    "memberof": "src/block.js~Block",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/block.js~Block#newGenesisDAGNode",
    "access": "public",
    "description": "Create a new genesis block",
    "lineNumber": 32,
    "params": [
      {
        "name": "difficulty",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      },
      {
        "name": "address",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/chain.js",
    "content": "import { GENESISBLOCK, genesisCID, consensusSubsidyInterval, reward } from './params'\r\nimport Block from './block'\r\n\r\nconst invalidTransactions = {};\r\n\r\nglobalThis.chain = globalThis.chain || [\r\n  GENESISBLOCK\r\n];\r\n\r\nglobalThis.mempool = globalThis.mempool || [];\r\nglobalThis.blockHashSet = globalThis.blockHashSet || [];\r\n\r\nconst filterPeers = (peers, localPeer) => {\r\n  const set = []\r\n  return peers.reduce((p, c) => {\r\n    if (set.indexOf(c.peer) === -1 && c.peer !== localPeer) {\r\n      set.push(c.peer)\r\n      p.push(c)\r\n    }\r\n    return p\r\n  }, [])\r\n}\r\n\r\n/**\r\n * @extends {Block}\r\n * @example\r\n * const chain = new Chain()\r\n */\r\nexport default class Chain extends Block {\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  get chain() { return globalThis.chain }\r\n  \r\n  get mempool() { return globalThis.mempool }\r\n  \r\n  get blockHashSet() { return globalThis.blockHashSet }\r\n  \r\n  // TODO: needs 3 nodes running\r\n  invalidTransaction(data) {\r\n    // console.log(data.data.toString());\r\n    data = JSON.parse(data.data.toString());\r\n    if (!invalidTransactions[data.tx]) invalidTransactions[data.tx] = 0;\r\n    ++invalidTransactions[data.tx]\r\n    const count = invalidTransactions[data.tx];\r\n    if (count === 3) {\r\n      const memIndex = mempool.indexOf(data)\r\n      mempool.splice(memIndex, 1)\r\n      delete invalidTransactions[data.tx];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * @param {number} height\r\n   */\r\n  consensusSubsidy(height) {\r\n    console.log(height);\r\n  \tconst quarterlings = height / consensusSubsidyInterval;\r\n  \tif (quarterlings >= 256) {\r\n  \t\treturn 0;\r\n  \t}\r\n  \t//subsidy is lowered by 12.5 %, approx every year\r\n  \tconst minus = quarterlings >= 1 ? (quarterlings * (reward / 256)) : 0;\r\n  \treturn reward - minus;\r\n  }\r\n  \r\n  async getTransactions(withMempool = true, index = 0) {\r\n    const _chain = [...chain];\r\n    if (index === chain.length - 1) return []\r\n    _chain.slice(index + 1, chain.length - 1)\r\n  \tlet transactions = _chain.reduce((transactions, block) => [ ...transactions, ...block.transactions], []);\r\n  \tif (withMempool) transactions = transactions.concat(mempool);\r\n    let _transactions = []\r\n    // TODO: deprecated, get/put should be handled in core\r\n    for (const tx of transactions) {\r\n      const {multihash} = tx\r\n      if (multihash) {\r\n        let value;\r\n        if (leofcoin.transaction.dag) value = await leofcoin.transaction.dag.get(multihash)\r\n        _transactions.push(value)\r\n      } else {\r\n        _transactions.push(tx)\r\n      }\r\n      \r\n    }\r\n    return _transactions\r\n  };\r\n  \r\n  async getTransactionsForAddress(address, index = 0) {\r\n    const transactions = await this.getTransactions(false, index);\r\n  \treturn transactions.filter(tx => tx.inputs.find(i => i.address === address) ||\r\n    tx.outputs.find(o => o.address === address));\r\n  };\r\n  \r\n  /**\r\n   * \r\n   * @param {string} withMempool - with or without mempool inclusion\r\n   * @param {number} index - block height to start from\r\n   */\r\n  async getUnspent(withMempool = false, index = 0) {\r\n  \tconst transactions = await this.getTransactions(withMempool, index);\r\n  \t// Find all inputs with their tx ids\r\n  \tconst inputs = transactions.reduce((inputs, tx) => inputs.concat(tx.inputs), []);\r\n  \r\n  \t// Find all outputs with their tx ids\r\n  \tconst outputs = transactions.reduce((outputs, tx) =>\r\n  \t\toutputs.concat(tx.outputs.map(output => Object.assign({}, output, {tx: tx.id}))), []);\r\n  \r\n  \t// Figure out which outputs are unspent\r\n  \tconst unspent = outputs.filter(output =>\r\n  \t\ttypeof inputs.find(input => input.tx === output.tx && input.index === output.index && input.amount === output.amount) === 'undefined');\r\n  \treturn unspent;\r\n  }\r\n  \r\n  /**\r\n   * @param {string} address - wallet address\r\n   * @param {number} index - block height to start from\r\n   */\r\n  async getUnspentForAddress(address = null, index = 0) {\r\n    const unspent = await this.getUnspent(true, index)\r\n  \treturn unspent.filter(u => u.address === address);\r\n  }\r\n  \r\n  /**\r\n   * @param {string} address - wallet address\r\n   */\r\n  async getBalanceForAddress(address = null, index) {\r\n    // debug(`Getting balance for ${address}`)\r\n    const unspent = await this.getUnspentForAddress(address, index)\r\n    const amount = unspent.reduce((acc, u) => acc + u.amount , 0);\r\n    // debug(`Got ${amount} for ${address}`)\r\n  \treturn amount\r\n  }\r\n  \r\n  /**\r\n   * @deprecated Use getTransactionsForAddress(addr, index) instead\r\n   *\r\n   * @param {string} address - wallet address\r\n   * @param {number} index - block height to start from\r\n   * \r\n   * @return {number} balance\r\n   */\r\n  async getBalanceForAddressAfter(address = null, index = 0) {\r\n    // debug(`Getting balance for ${address} @${index}`)\r\n    const unspent = await this.getUnspentForAddress(address, index)\r\n    const amount = unspent.reduce((acc, u) => acc + u.amount , 0);\r\n    // debug(`Got ${amount} for ${address} @${index}`)\r\n    return amount\r\n  }\r\n  \r\n  median(array) {\r\n    array.sort((a,b) => a - b)\r\n  \r\n    var half = Math.floor(array.length / 2);\r\n  \r\n    if(array.length % 2)\r\n      return array[half];\r\n    else\r\n      return (array[half - 1] + array[half]) / 2.0;\r\n  }\r\n  \r\n  difficulty() {\r\n  \t// TODO: lower difficulty when transactionpool contain more then 500 tx ?\r\n  \t// TODO: raise difficulty when pool is empty\r\n  \r\n    // or\r\n  \r\n    // TODO: implement iTX (instant transaction)\r\n    // iTX is handled by multiple peers, itx is chained together by their hashes\r\n    // by handlng a tx as itx the block well be converted into a iRootBlock\r\n    // this results into smaller chains (tangles, tails) which should improve\r\n    // resolving transactions, wallet amounts etc ...\r\n  \tconst start = chain.length >= 128 ? (chain.length - 128) : 0;\r\n  \tconst blocks = chain.slice(start, (chain.length - 1)).reverse();\r\n  \tconst stamps = [];\r\n  \tfor (var i = 0; i < blocks.length; i++) {\r\n  \t\tif (blocks[i + 1]) {\r\n  \t\t\tstamps.push(blocks[i].time - blocks[i + 1].time);\r\n  \t\t}\r\n  \t}\r\n  \tif (stamps.length === 0) {\r\n  \t\tstamps.push(10);\r\n  \t}\r\n  \tlet blocksMedian = this.median(stamps) || 10;\r\n    const offset = blocksMedian / 10\r\n     // offset for quick recovery\r\n  \tif (blocksMedian < 10) {\r\n  \t\tblocksMedian -= (offset / 2);\r\n  \t} else if (blocksMedian > 10) {\r\n  \t\tblocksMedian += (offset * 2);\r\n  \t}\r\n    if (blocksMedian < 0) blocksMedian = -blocksMedian\r\n    console.log(`Average Block Time: ${blocksMedian}`);\r\n    console.log(`Difficulty: ${10 / blocksMedian}`);\r\n  \treturn (1000 / (10 / blocksMedian));\r\n  };//10000\r\n  \r\n  \r\n  /**\r\n   * Get the transactions for the next Block\r\n   *\r\n   * @return {object} transactions\r\n   */\r\n  async nextBlockTransactions() {\r\n  \tconst unspent = await this.getUnspent(false);\r\n    console.log(unspent);\r\n  \treturn mempool.filter(async (transaction) => {\r\n      console.log(transaction);\r\n      const multihash = transaction.multihash\r\n      const value = await leofcoin.transaction.get(multihash)\r\n      console.log({value});\r\n  \t\ttry {\r\n  \t\t\tawait this.validateTransaction(multihash, value, unspent);\r\n        return transaction\r\n  \t\t} catch (e) {\r\n        globalThis.ipfs.pubsub.publish('invalid-transaction', Buffer.from(JSON.stringify(transaction)));\r\n  \t\t\tconsole.error(e);\r\n  \t\t}\r\n  \t});\r\n  }  \r\n  \r\n  longestChain() {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        let peers = await globalThis.ipfs.swarm.peers()\r\n        peers = await filterPeers(peers, globalThis.peerId)\r\n        // if (peers.length < 2) return setTimeout(async () => {\r\n        //   const res = await longestChain()\r\n        //   resolve(res)\r\n        // }, 100);\r\n        \r\n        const set = []\r\n        for (const {peer} of peers) {\r\n          const chunks = []\r\n          try {\r\n            for await (const chunk of ipfs.name.resolve(peer)) {\r\n              chunks.push(chunk)\r\n            }\r\n          } catch (e) {\r\n            console.warn(e)\r\n          }\r\n          if (chunks.length > 0) set.push({peer, path: chunks});\r\n        }\r\n        const _peers = []\r\n        let _blocks = []\r\n        for (const {peer, path} of set) {    \r\n          if (_peers.indexOf(peer) === -1) {\r\n            _peers.push(peer)\r\n            const block = await leofcoin.block.dag.get(path[0] || path)      \r\n            _blocks.push({block, path: path[0] || path})        \r\n          }        \r\n        }\r\n        \r\n        let localIndex\r\n        let localHash\r\n        try {\r\n          localIndex = await chainStore.get('localIndex')\r\n          localHash = await chainStore.get('localBlock')\r\n        } catch (e) {\r\n          localIndex = 0;\r\n          localHash = genesisCID;\r\n          await chainStore.put('localIndex', 0)\r\n          await chainStore.put('localBlock', genesisCID)\r\n        }\r\n        const history = {}\r\n        _blocks = _blocks.reduce((set, {block, path}) => {\r\n          if (set.block.index < block.index) {\r\n            history[set.block.index] = set;\r\n            set.block.index = block.index\r\n            set.hash = path.replace('/ipfs/', '')\r\n            set.seen = 1\r\n          } else if (set.block.index === block.index) {\r\n            set.seen = Number(set.seen) + 1\r\n          }\r\n          return set\r\n        }, {block: { index: localIndex }, hash: localHash, seen: 0})\r\n        // temp \r\n        // if (_blocks.seen < 2) {\r\n        //   _blocks = history[_blocks.block.index - 1]\r\n        // \r\n        // }\r\n        // const localIndex = await chainStore.get('localIndex')\r\n        // const localHash = await chainStore.get('localBlock')\r\n        return resolve({index: _blocks.block.index, hash: _blocks.hash})\r\n        \r\n      } catch (e) {\r\n        console.warn(e);\r\n        // debug(e)\r\n        reject(e)\r\n      }\r\n    })\r\n  }\r\n  \r\n  lastBlock() {\r\n    return new Promise(async (resolve, reject) => {\r\n      const result = await this.longestChain();\r\n      \r\n      resolve(result); // retrieve links\r\n    });\r\n  }\r\n  \r\n  \r\n  async nextBlock(address) {\r\n    console.log(address);\r\n    console.log({address});\r\n    let transactions;\r\n    let previousBlock;\r\n    try {\r\n      previousBlock = await this.lastBlock()\r\n      \r\n      if (previousBlock.index > chain.length - 1) {\r\n        await leofcoin.chain.sync()\r\n        previousBlock = await this.lastBlock()\r\n      }\r\n      if (!previousBlock.index) previousBlock = chain[chain.length - 1]\r\n      transactions = await this.nextBlockTransactions();\r\n    } catch (e) {\r\n      previousBlock = GENESISBLOCK\r\n      previousBlock.hash = genesisCID\r\n      transactions = await this.nextBlockTransactions();\r\n    } finally {\r\n      // console.log(transactions, previousBlock, address);\r\n      console.log({transactions});\r\n      return await this.newBlock({transactions, previousBlock, address});\r\n    }\r\n  }  \r\n  \r\n  /**\r\n  \t * Create new block\r\n  \t *\r\n  \t * @param {array} transactions\r\n  \t * @param {object} previousBlock\r\n  \t * @param {string} address\r\n  \t * @return {index, prevHash, time, transactions, nonce}\r\n  \t */\r\n  async newBlock({transactions = [], previousBlock, address}) {\r\n  \tconst index = previousBlock.index + 1\r\n  \tconst minedTx = await this.createRewardTransaction(address, this.consensusSubsidy(index))\r\n  \ttransactions.push(minedTx.toJSON());\r\n    console.log({transactions});\r\n  \tthis.data = {\r\n  \t\tindex,\r\n  \t\tprevHash: previousBlock.hash,\r\n  \t\ttime: Math.floor(new Date().getTime() / 1000),\r\n  \t\ttransactions,\r\n  \t\tnonce: 0\r\n  \t};\r\n    console.log({data: this.data});\r\n  \tthis.data.hash = await this.blockHash(this.data);\r\n    console.log({hash: this.data.hash});\r\n  \treturn this.data;\r\n  }\r\n}",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/chain.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "invalidTransactions",
    "memberof": "src/chain.js",
    "static": true,
    "longname": "src/chain.js~invalidTransactions",
    "access": "public",
    "export": false,
    "importPath": "@leofcoin/lib/src/chain.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "filterPeers",
    "memberof": "src/chain.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chain.js~filterPeers",
    "access": "public",
    "export": false,
    "importPath": "@leofcoin/lib/src/chain.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "peers",
        "types": [
          "*"
        ]
      },
      {
        "name": "localPeer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "Chain",
    "memberof": "src/chain.js",
    "static": true,
    "longname": "src/chain.js~Chain",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/chain.js",
    "importStyle": "Chain",
    "description": "",
    "examples": [
      "const chain = new Chain()"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "Block"
    ]
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "chain",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#chain",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "mempool",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#mempool",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "get",
    "name": "blockHashSet",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#blockHashSet",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "invalidTransaction",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#invalidTransaction",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "consensusSubsidy",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#consensusSubsidy",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "getTransactions",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#getTransactions",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "withMempool",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "index",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "getTransactionsForAddress",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#getTransactionsForAddress",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "getUnspent",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#getUnspent",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "withMempool",
        "description": "with or without mempool inclusion"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "block height to start from"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getUnspentForAddress",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#getUnspentForAddress",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "wallet address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "block height to start from"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "getBalanceForAddress",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#getBalanceForAddress",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "wallet address"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "getBalanceForAddressAfter",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#getBalanceForAddressAfter",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "deprecated": "Use getTransactionsForAddress(addr, index) instead",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "wallet address"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "block height to start from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "balance"
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "median",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#median",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "difficulty",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#difficulty",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "nextBlockTransactions",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#nextBlockTransactions",
    "access": "public",
    "description": "Get the transactions for the next Block",
    "lineNumber": 205,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "transactions"
    },
    "params": []
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "longestChain",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#longestChain",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "lastBlock",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chain.js~Chain#lastBlock",
    "access": "public",
    "description": null,
    "lineNumber": 295,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "nextBlock",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#nextBlock",
    "access": "public",
    "description": null,
    "lineNumber": 304,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "newBlock",
    "memberof": "src/chain.js~Chain",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/chain.js~Chain#newBlock",
    "access": "public",
    "description": "Create new block",
    "lineNumber": 337,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "transactions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "previousBlock",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "index, prevHash, time, transactions, nonce"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "data",
    "memberof": "src/chain.js~Chain",
    "static": false,
    "longname": "src/chain.js~Chain#data",
    "access": "public",
    "description": null,
    "lineNumber": 342,
    "undocument": true,
    "type": {
      "types": [
        "{\"index\": *, \"prevHash\": *, \"time\": *, \"transactions\": *, \"nonce\": *}"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/errors.js",
    "content": "const invalid = (name, text) => new Error(`Invalid ${name}: ${text}`);\r\n// TODO: show notification\r\n/**\r\n * @example\r\n * const errors = new Errors()\r\n */\r\nexport default class Errors {\r\n  BlockError(text) {\r\n    invalid('block', text)\r\n  }\r\n  \r\n  TransactionError(text) {\r\n    invalid('transaction', text)\r\n  }\r\n  \r\n  MinerWarning(text) {\r\n    new Error(`warning @Miner: ${text}`)\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/errors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "invalid",
    "memberof": "src/errors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/errors.js~invalid",
    "access": "public",
    "export": false,
    "importPath": "@leofcoin/lib/src/errors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "class",
    "name": "Errors",
    "memberof": "src/errors.js",
    "static": true,
    "longname": "src/errors.js~Errors",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/errors.js",
    "importStyle": "Errors",
    "description": "",
    "examples": [
      "const errors = new Errors()"
    ],
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "BlockError",
    "memberof": "src/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/errors.js~Errors#BlockError",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "TransactionError",
    "memberof": "src/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/errors.js~Errors#TransactionError",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "MinerWarning",
    "memberof": "src/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/errors.js~Errors#MinerWarning",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/hash.js",
    "content": "import IPLDLFCTx from 'ipld-lfc-tx'\r\nimport ipldLfc from 'ipld-lfc'\r\nimport CID from 'cids'\r\nimport Validator from './validate'\r\n\r\nconst { LFCNode, util } = ipldLfc\r\n\r\n/**\r\n * @extends {Validator}\r\n * @example\r\n * const hash = new Hash()\r\n */\r\nexport default class Hash extends Validator {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t}\r\n\t\r\n\thashFromMultihash(multihash) {\r\n\t  const cid = new CID(multihash.replace('/ipfs/', ''))\r\n\t  return cid.multihash.slice(cid.prefix.length / 2).toString('hex')\r\n\t}\r\n\t\r\n\tmultihashFromHash(hash) {\r\n\t  const cid = new CID(1, 'leofcoin-block', Buffer.from(`1d40${hash}`, 'hex'), 'base58btc');\r\n\t  return cid.toBaseEncodedString();\r\n\t}\r\n\t\r\n\tasync blockHash(block) {\t\t\r\n\t  block = await new LFCNode({...block});\r\n\t  const cid = await util.cid(await block.serialize())\r\n\t  return this.hashFromMultihash(cid.toBaseEncodedString());\r\n\t}\r\n\t\r\n\t/**\r\n\t * Generate transaction hash\r\n\t *\r\n\t * @param {object} transaction {id, type, inputs, outputs}\r\n\t */\r\n\tasync transactionHash(transaction) {\r\n\t\tconst tx = new IPLDLFCTx.LFCTx(transaction)\r\n\t\tconst cid = await IPLDLFCTx.util.cid(tx.serialize())\r\n\t\treturn cid.toBaseEncodedString()\r\n\t}\r\n\r\n\t/**\r\n\t * Generate transaction input hash\r\n\t *\r\n\t * @param {object} transactionInput {transaction, index, amount, address}\r\n\t */\r\n\ttransactionInputHash(transactionInput) {\r\n\t\tconst {tx, index, amount, address} = transactionInput;\r\n\t\treturn _SHA256({tx, index, amount, address});\r\n\t}\r\n\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/hash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "LFCNode",
    "memberof": "src/hash.js",
    "static": true,
    "longname": "src/hash.js~LFCNode",
    "access": "public",
    "export": false,
    "importPath": "@leofcoin/lib/src/hash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "class",
    "name": "Hash",
    "memberof": "src/hash.js",
    "static": true,
    "longname": "src/hash.js~Hash",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/hash.js",
    "importStyle": "Hash",
    "description": "",
    "examples": [
      "const hash = new Hash()"
    ],
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "Validator"
    ]
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/hash.js~Hash",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/hash.js~Hash#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "hashFromMultihash",
    "memberof": "src/hash.js~Hash",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/hash.js~Hash#hashFromMultihash",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "multihash",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "multihashFromHash",
    "memberof": "src/hash.js~Hash",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/hash.js~Hash#multihashFromHash",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "hash",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "blockHash",
    "memberof": "src/hash.js~Hash",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/hash.js~Hash#blockHash",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "block",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "transactionHash",
    "memberof": "src/hash.js~Hash",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/hash.js~Hash#transactionHash",
    "access": "public",
    "description": "Generate transaction hash",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "transaction",
        "description": "{id, type, inputs, outputs}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "transactionInputHash",
    "memberof": "src/hash.js~Hash",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/hash.js~Hash#transactionInputHash",
    "access": "public",
    "description": "Generate transaction input hash",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "transactionInput",
        "description": "{transaction, index, amount, address}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/index.js",
    "content": "import Block from './block'\r\nimport Chain from './chain'\r\nimport Errors from './errors'\r\nimport Hash from './hash'\r\nimport Transaction from './transaction'\r\nimport Validator from './validate'\r\nimport * as  params from './params'\r\n\r\nconst hash = new Hash()\r\nconst errors = new Errors()\r\nconst validate = new Validator()\r\nconst transaction = new Transaction()\r\nconst chain = new Chain()\r\nconst block = new Block()\r\n\r\nexport {\r\n  block,\r\n  chain,\r\n  errors,\r\n  hash,\r\n  params,\r\n  transaction,\r\n  validate\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "block",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~block",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/index.js",
    "importStyle": "{block}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "src/block.js~Block"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "chain",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~chain",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/index.js",
    "importStyle": "{chain}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "src/chain.js~Chain"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "errors",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~errors",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/index.js",
    "importStyle": "{errors}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "src/errors.js~Errors"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "hash",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~hash",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/index.js",
    "importStyle": "{hash}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "src/hash.js~Hash"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "transaction",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~transaction",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/index.js",
    "importStyle": "{transaction}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "src/transaction.js~Transaction"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "validate",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~validate",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/index.js",
    "importStyle": "{validate}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/params.js",
    "content": "export const reward = 150;\r\nexport const consensusSubsidyInterval = 52500;\r\nexport const consensusSubsidyPercentage = 12.5; // quarterlings\r\nexport const genesisCID = 'zsNS6wZiHSc2QPHmjV8TMNn798b4Kp9jpjsBNeUkPhaJTza3GosWUgE72Jy3X9jKMrFCcDni7Pq4yXogQN4TcAfrPmTXFt';\r\nexport const GENESISBS58 = 'EKBqhKsFG14thpzEKUbbb94WG9a1p9sm82YQ2YwK6wkme4C1df2dMwggnDgh74zZsBx2UbWi1qDQLysrrU3YKJ6V73sLtASepYieNpx8Fwjxyjh6xWNYToTNbNkp1geiSWq6fne7Npf37HCZVmi';\r\nexport const GENESISBLOCK = {\r\n\tindex: 0,\r\n  prevHash: Buffer.alloc(47).toString('hex'),\r\n  time: 1590240964,\r\n  transactions: [],\r\n  nonce: 1077701\r\n}\r\n\r\n/**\r\n * network (hardcoded for now)\r\n * @dev change to 'leofcoin:olivia' for testnet\r\n */\r\nexport const network = 'leofcoin'",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/params.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "reward",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~reward",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{reward}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "consensusSubsidyInterval",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~consensusSubsidyInterval",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{consensusSubsidyInterval}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "consensusSubsidyPercentage",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~consensusSubsidyPercentage",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{consensusSubsidyPercentage}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "genesisCID",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~genesisCID",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{genesisCID}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "GENESISBS58",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~GENESISBS58",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{GENESISBS58}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "GENESISBLOCK",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~GENESISBLOCK",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{GENESISBLOCK}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"index\": *, \"prevHash\": *, \"time\": number, \"transactions\": *, \"nonce\": number}"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "network",
    "memberof": "src/params.js",
    "static": true,
    "longname": "src/params.js~network",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/params.js",
    "importStyle": "{network}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/transaction.js",
    "content": "import Validator from './validate.js'\r\nimport Errors from './errors.js'\r\nimport Hash from './hash.js'\r\nimport { randomBytes } from 'crypto'\r\nimport MultiWallet from '@leofcoin/multi-wallet'\r\nimport { network, reward } from './params.js';\r\nimport * as ipldLfcTx from 'ipld-lfc-tx';\r\n\r\nconst { LFCTx, util } = ipldLfcTx\r\n\r\n/**\r\n * @extends {Hash}\r\n * @example\r\n * const transaction = new Transaction()\r\n */\r\nexport default class Transaction extends Hash {\r\n  constructor() {\r\n    super()\r\n  }\r\n  \r\n  \r\n  /**\r\n   * Create transaction\r\n   *\r\n   * @param inputs\r\n   * @param outputs\r\n   * @param reward\r\n   * @return {{id: string, reward: boolean, inputs: *, outputs: *, hash: string}}\r\n   */\r\n  async newTransaction(inputs, outputs, reward = null) {\r\n    try {\r\n      const tx = new LFCTx({\r\n        id: randomBytes(32).toString('hex'),\r\n        time: Math.floor(new Date().getTime() / 1000),\r\n        reward,\r\n        outputs,\r\n        inputs\r\n      });\r\n      // const cid = await util.cid(tx.serialize())\r\n      // await global.ipfs.dag.put(tx, {format: util.codec, hashAlg: util.defaultHashAlg, version: 1, baseFormat: 'base58btc'})\r\n      return tx\r\n    } catch (e) {\r\n      throw e\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Create reward transaction for block mining\r\n   *\r\n   * @param {string} address\r\n   * @param {number} height\r\n   * @return {id: string, reward: boolean, inputs: *, outputs: *, hash: string}\r\n   */\r\n  async createRewardTransaction(address, amount) {\r\n    return this.newTransaction([], [{index: 0, amount, address}], 'mined');\r\n  }\r\n  \r\n  /**\r\n   * validate transaction\r\n   *\r\n   * @param multihash\r\n   * @param transaction\r\n   * @param unspent\r\n   */\r\n  async validateTransaction(multihash, transaction, unspent) {\r\n  \tif (!transaction.reward) delete transaction.reward\r\n  \tconst outputs = transaction.outputs.map(o => {\r\n  \t\t// TODO: fix script\r\n  \t\tif (!o.script) delete o.script\r\n  \t\treturn o\r\n  \t})\r\n  \ttransaction.outputs = outputs\r\n  \tif (!transaction.script) delete transaction.script\r\n  \tif (!isValid('transaction', transaction)) throw this.TransactionError('Invalid transaction');\r\n  \tif (multihash !== await this.transactionHash(transaction)) throw this.TransactionError('Invalid transaction hash');\r\n  \t// TODO: versions should be handled here...\r\n  \t// Verify each input signature\r\n  \t\r\n  \tif (transaction.inputs) {\r\n  \t\ttransaction.inputs.forEach(input => {\r\n  \t  \tconst { signature, address } = input;\r\n  \t\t\tconst hash = this.transactionInputHash(input);\r\n  \r\n  \t  \tlet wallet = new MultiWallet(network);\r\n  \t    wallet.fromAddress(address, null, network);\r\n  \t\t\t\r\n  \t\t\tif (!wallet.verify(Buffer.from(signature, 'hex'), Buffer.from(hash, 'hex')))\r\n  \t\t\t\tthrow this.TransactionError('Invalid input signature');\r\n  \t\t});\r\n  \t\r\n  \t\t// Check if inputs are in unspent list\r\n  \t\ttransaction.inputs.forEach((input) => {\r\n  \t\t\tif (!unspent.find(out => out.tx === input.tx && out.index === input.index)) { throw this.TransactionError('Input has been already spent: ' + input.tx); }\r\n  \t\t});\t\r\n  \t}\r\n  \t\r\n  \tif (transaction.reward === 'mined') {\r\n  \t\t// For reward transaction: check if reward output is correct\r\n  \t\tif (transaction.outputs.length !== 1) throw this.TransactionError('Reward transaction must have exactly one output');\r\n  \t\tif (transaction.outputs[0].amount !== reward) throw this.TransactionError(`Mining reward must be exactly: ${reward}`);\r\n  \t} else if (transaction.inputs) {\r\n  \t\t// For normal transaction: check if total output amount equals input amount\r\n  \t\tif (transaction.inputs.reduce((acc, input) => acc + input.amount, 0) !==\r\n        transaction.outputs.reduce((acc, output) => acc + output.amount, 0)) { throw this.TransactionError('Input and output amounts do not match'); }\r\n  \t}\r\n  \r\n  \treturn true;\r\n  }\r\n  \r\n  /**\r\n   * validate transactions list for current block\r\n   *\r\n   * @param {array} transactions\r\n   * @param unspent\r\n   */\r\n  async validateTransactions(transactions, unspent) {\r\n  \tconst _transactions = []\r\n  \tfor (const {multihash} of transactions) {\r\n  \t\tconst tx = await leofcoin.transaction.dag.get(multihash)\r\n  \t\t_transactions.push({multihash, value: tx.toJSON()})\r\n  \t\t\r\n  \t}\r\n  \tfor (const {value, multihash} of _transactions) {\r\n  \t\t// TODO: fix value.scrip\r\n  \t\tawait this.validateTransaction(multihash, value, unspent)\r\n  \t}\r\n  \t\r\n  \tif (_transactions.filter(({value}) => value.reward === 'mined').length !== 1)\r\n  \t\tthrow this.TransactionError('Transactions cannot have more than one reward')\t\r\n  }\r\n  \r\n  /**\r\n   * Verify signature\r\n   *\r\n   * @param {string} address - signer address\r\n   * @param {string} signature - signature to verify\r\n   * @param {string} hash - transaction hash\r\n   */\r\n  verifySignature(address, signature, hash) {\r\n  \tconst wallet = new MultiWallet(network);\r\n  \treturn wallet.verify(signature, hash, address);\r\n  }\r\n  \r\n  /**\r\n   * Create and sign input\r\n   *\r\n   * @param transaction Based on transaction id\r\n   * @param index Based on transaction output index\r\n   * @param amount\r\n   * @param wallet\r\n   * @return {transaction, index, amount, address}\r\n   */\r\n  createInput(transaction, index, amount, wallet) {\r\n  \tconst input = {\r\n  \t\ttransaction,\r\n  \t\tindex,\r\n  \t\tamount,\r\n  \t\taddress: wallet.address,\r\n  \t};\r\n  \tinput.signature = wallet.sign(Buffer.from(this.transactionInputHash(input), 'hex')).toString('hex');\r\n  \treturn input;\r\n  }\r\n  \r\n  /**\r\n   * Create a transaction\r\n   *\r\n   * @param wallet\r\n   * @param toAddress\r\n   * @param amount\r\n   * @return {id, reward, inputs, outputs, hash,}\r\n   */\r\n  async buildTransaction(wallet, toAddress, amount, unspent) {\r\n  \tlet inputsAmount = 0;\r\n  \t// const unspent = await this.getUnspentForAddress(wallet.address);\r\n  \tconst inputsRaw = unspent.filter(i => {\r\n  \t\tconst more = inputsAmount < amount;\r\n  \t\tif (more) inputsAmount += i.amount;\r\n  \t\treturn more;\r\n  \t});\r\n  \tif (inputsAmount < amount) throw this.TransactionError('Not enough funds');\r\n  \t// TODO: Add multiSigning\r\n  \tconst inputs = inputsRaw.map(i => this.createInput(i.tx, i.index, i.amount, wallet));\r\n  \t// Send amount to destination address\r\n  \tconst outputs = [{index: 0, amount, address: toAddress}];\r\n  \t// Send back change to my wallet\r\n  \tif (inputsAmount - amount > 0) {\r\n  \t\toutputs.push({index: 1, amount: inputsAmount - amount, address: wallet.address});\r\n  \t}\r\n  \treturn this.newTransaction(inputs, outputs);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/transaction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "LFCTx",
    "memberof": "src/transaction.js",
    "static": true,
    "longname": "src/transaction.js~LFCTx",
    "access": "public",
    "export": false,
    "importPath": "@leofcoin/lib/src/transaction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "Transaction",
    "memberof": "src/transaction.js",
    "static": true,
    "longname": "src/transaction.js~Transaction",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/transaction.js",
    "importStyle": "Transaction",
    "description": "",
    "examples": [
      "const transaction = new Transaction()"
    ],
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "Hash"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "newTransaction",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/transaction.js~Transaction#newTransaction",
    "access": "public",
    "description": "Create transaction",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "inputs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "outputs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "reward",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{id: string, reward: boolean, inputs: *, outputs: *, hash: string}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "createRewardTransaction",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/transaction.js~Transaction#createRewardTransaction",
    "access": "public",
    "description": "Create reward transaction for block mining",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "id: string, reward: boolean, inputs: *, outputs: *, hash: string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "validateTransaction",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/transaction.js~Transaction#validateTransaction",
    "access": "public",
    "description": "validate transaction",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "multihash",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "transaction",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "unspent",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "validateTransactions",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/transaction.js~Transaction#validateTransactions",
    "access": "public",
    "description": "validate transactions list for current block",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "transactions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "unspent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "verifySignature",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#verifySignature",
    "access": "public",
    "description": "Verify signature",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "signer address"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": "signature to verify"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": "transaction hash"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "createInput",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#createInput",
    "access": "public",
    "description": "Create and sign input",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "transaction",
        "description": "Based on transaction id"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Based on transaction output index"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "wallet",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "transaction, index, amount, address"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "buildTransaction",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/transaction.js~Transaction#buildTransaction",
    "access": "public",
    "description": "Create a transaction",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "wallet",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "toAddress",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "id, reward, inputs, outputs, hash,"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/validate.js",
    "content": "import {object, number, array, string } from '@hapi/joi';\r\nimport Errors from './errors'\r\n\r\n/**\r\n * @extends {Errors}\r\n * @example\r\n * const validator = new Validator()\r\n */\r\nexport default class Validate extends Errors {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\t\r\n\t\tconst block = object().keys({\r\n\t\t\tindex: number(),\r\n\t\t\tprevHash: string().length(94),\r\n\t\t\ttime: number(),\r\n\t\t\ttransactions: array().items(object().keys({\r\n\t\t\t\tmultihash: string(),\r\n\t\t\t\tsize: number()\r\n\t\t\t})),\r\n\t\t\tnonce: number(),\r\n\t\t\thash: string().length(128)\r\n\t\t});\r\n\t\t\r\n\t\tconst transaction = object().keys({\r\n\t\t\tid: string().hex().length(64),\r\n\t\t\ttime: number(),\r\n\t\t\treward: string(),\r\n\t\t\tscript: string(),\r\n\t\t\tinputs: array().items(object().keys({\r\n\t\t\t\ttx: string().hex().length(64),\r\n\t\t\t\tindex: number(),\r\n\t\t\t\tamount: number(),\r\n\t\t\t\taddress: string(),\r\n\t\t\t\tsignature: string().hex()\r\n\t\t\t})),\r\n\t\t\toutputs: array().items(object().keys({\r\n\t\t\t\tindex: number(),\r\n\t\t\t\tamount: number(),\r\n\t\t\t\taddress: string()\r\n\t\t\t})),\r\n\t\t});\r\n\t\t\r\n\t\tthis.schemas = {\r\n\t\t\tblock,\r\n\t\t\ttransaction,\r\n\t\t};\r\n\t}\r\n\t\t\r\n\tvalidate(schema, data) {\r\n\t\tthis.schemas[schema].validate(data);\r\n\t}\r\n\t\r\n\tisValid(schema, data) {\r\n\t\treturn Boolean(!this.validate(schema, data).error)\r\n\t};\r\n}",
    "static": true,
    "longname": "D:/Workspace/leofcoin/lib/src/validate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "Validate",
    "memberof": "src/validate.js",
    "static": true,
    "longname": "src/validate.js~Validate",
    "access": "public",
    "export": true,
    "importPath": "@leofcoin/lib/src/validate.js",
    "importStyle": "Validate",
    "description": "",
    "examples": [
      "const validator = new Validator()"
    ],
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Errors"
    ]
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/validate.js~Validate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/validate.js~Validate#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "schemas",
    "memberof": "src/validate.js~Validate",
    "static": false,
    "longname": "src/validate.js~Validate#schemas",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "{\"block\": *, \"transaction\": *}"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "validate",
    "memberof": "src/validate.js~Validate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/validate.js~Validate#validate",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "schema",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "isValid",
    "memberof": "src/validate.js~Validate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/validate.js~Validate#isValid",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "schema",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# @leofcoin/lib\r\n\r\n\r\n[![Coverage](https://coveralls.io/repos/github/leofcoin/lib/badge.svg?branch=master)](https://coveralls.io/github/leofcoin/lib?branch=master)\r\n[![Build Status](https://travis-ci.org/leofcoin/lib.svg?branch=master)](https://travis-ci.org/leofcoin/lib)\r\n[![](https://david-dm.org/leofcoin/lib.svg?style=flat-square)](https://david-dm.org/leofcoin/lib)\r\n[![](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\r\n![](https://img.shields.io/badge/npm-%3E%3D3.0.0-orange.svg?style=flat-square)\r\n![](https://img.shields.io/badge/Node.js-%3E%3D6.0.0-orange.svg?style=flat-square)",
    "longname": "D:\\Workspace\\leofcoin\\lib\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"@leofcoin/lib\",\r\n  \"version\": \"0.1.2\",\r\n  \"main\": \"index.js\",\r\n  \"license\": \"MIT\",\r\n  \"private\": false,\r\n  \"scripts\": {\r\n    \"test\": \"node test\",\r\n    \"start\": \"node index.js\",\r\n    \"compile\": \"rollup -c\",\r\n    \"doc\": \"./node_modules/.bin/esdoc\",\r\n    \"coverage\": \"nyc --reporter=lcov npm run test\",\r\n    \"coveralls\": \"cat ./coverage/lcov.info | coveralls\"\r\n  },\r\n  \"description\": \"project template node\",\r\n  \"repository\": \"https://github.com/leofcoin/lib\",\r\n  \"author\": \"vandeurenglenn <vandeurenglenn@gmail.com>\",\r\n  \"dependencies\": {\r\n    \"@leofcoin/multi-wallet\": \"^2.0.0\",\r\n    \"cids\": \"^0.8.3\",\r\n    \"ipld-lfc\": \"^0.2.1\",\r\n    \"ipld-lfc-tx\": \"^0.3.3\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"coveralls\": \"^3.1.0\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"lfc-api\": \"^2.14.4\",\r\n    \"nyc\": \"^15.1.0\",\r\n    \"rollup\": \"^2.18.2\",\r\n    \"tape\": \"^5.0.1\"\r\n  },\r\n  \"homepage\": \"https://github.com/leofcoin/lib#readme\",\r\n  \"esdoc\": {\r\n    \"source\": \"./src/\",\r\n    \"destination\": \"./docs\",\r\n    \"plugins\": [\r\n      {\r\n        \"name\": \"esdoc-ecmascript-proposal-plugin\",\r\n        \"option\": {\r\n          \"classProperties\": true,\r\n          \"objectRestSpread\": true,\r\n          \"doExpressions\": true,\r\n          \"functionBind\": true,\r\n          \"functionSent\": true,\r\n          \"asyncGenerators\": true,\r\n          \"decorators\": true,\r\n          \"exportExtensions\": true,\r\n          \"dynamicImport\": true\r\n        }\r\n      },\r\n      {\r\n        \"name\": \"esdoc-standard-plugin\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
    "longname": "D:\\Workspace\\leofcoin\\lib\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]