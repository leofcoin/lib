[
  {
    "name": "Chain#getBalanceForAddress",
    "filePath": "src/chain.js",
    "lines": [
      {
        "lineNumber": 124,
        "line": "  /**\r"
      },
      {
        "lineNumber": 125,
        "line": "   * @param {string} address - wallet address\r"
      },
      {
        "lineNumber": 126,
        "line": "   */\r"
      },
      {
        "lineNumber": 127,
        "line": "  async getBalanceForAddress(address = null, index) {\r"
      }
    ],
    "codeParams": [
      "address",
      "index"
    ],
    "docParams": [
      "address"
    ]
  },
  {
    "name": "Chain#newBlock",
    "filePath": "src/chain.js",
    "lines": [
      {
        "lineNumber": 328,
        "line": "  /**\r"
      },
      {
        "lineNumber": 329,
        "line": "  \t * Create new block\r"
      },
      {
        "lineNumber": 330,
        "line": "  \t *\r"
      },
      {
        "lineNumber": 331,
        "line": "  \t * @param {array} transactions\r"
      },
      {
        "lineNumber": 332,
        "line": "  \t * @param {object} previousBlock\r"
      },
      {
        "lineNumber": 333,
        "line": "  \t * @param {string} address\r"
      },
      {
        "lineNumber": 334,
        "line": "  \t * @return {index, prevHash, time, transactions, nonce}\r"
      },
      {
        "lineNumber": 335,
        "line": "  \t */\r"
      },
      {
        "lineNumber": 336,
        "line": "  async newBlock({transactions = [], previousBlock, address}) {\r"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "transactions",
      "previousBlock",
      "address"
    ]
  },
  {
    "name": "Transaction#createRewardTransaction",
    "filePath": "src/transaction.js",
    "lines": [
      {
        "lineNumber": 46,
        "line": "  /**\r"
      },
      {
        "lineNumber": 47,
        "line": "   * Create reward transaction for block mining\r"
      },
      {
        "lineNumber": 48,
        "line": "   *\r"
      },
      {
        "lineNumber": 49,
        "line": "   * @param {string} address\r"
      },
      {
        "lineNumber": 50,
        "line": "   * @param {number} height\r"
      },
      {
        "lineNumber": 51,
        "line": "   * @return {id: string, reward: boolean, inputs: *, outputs: *, hash: string}\r"
      },
      {
        "lineNumber": 52,
        "line": "   */\r"
      },
      {
        "lineNumber": 53,
        "line": "  async createRewardTransaction(address, amount) {\r"
      }
    ],
    "codeParams": [
      "address",
      "amount"
    ],
    "docParams": [
      "address",
      "height"
    ]
  },
  {
    "name": "Transaction#buildTransaction",
    "filePath": "src/transaction.js",
    "lines": [
      {
        "lineNumber": 163,
        "line": "  /**\r"
      },
      {
        "lineNumber": 164,
        "line": "   * Create a transaction\r"
      },
      {
        "lineNumber": 165,
        "line": "   *\r"
      },
      {
        "lineNumber": 166,
        "line": "   * @param wallet\r"
      },
      {
        "lineNumber": 167,
        "line": "   * @param toAddress\r"
      },
      {
        "lineNumber": 168,
        "line": "   * @param amount\r"
      },
      {
        "lineNumber": 169,
        "line": "   * @return {id, reward, inputs, outputs, hash,}\r"
      },
      {
        "lineNumber": 170,
        "line": "   */\r"
      },
      {
        "lineNumber": 171,
        "line": "  async buildTransaction(wallet, toAddress, amount, unspent) {\r"
      }
    ],
    "codeParams": [
      "wallet",
      "toAddress",
      "amount",
      "unspent"
    ],
    "docParams": [
      "wallet",
      "toAddress",
      "amount"
    ]
  }
]